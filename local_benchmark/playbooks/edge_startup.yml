---
- hosts: all:!cloudcore
  become: true
  tasks:
  - name: Ensure docker service is running
    systemd:
      name: docker
      state: started
  - user:
      name: "{{username}}"
      state: present
    register: registered_user
   
  - name: Add edge user to docker group
    user:
      name: "{{ username }}"
      groups: "docker, systemd-journal"
    
  # - name: Allow HTTP pulling from private docker registry
  #   shell: echo '{ "insecure-registries":["{{ registry_ip }}"] }' > /etc/docker/daemon.json

  - name: Restart docker service
    command: systemctl restart docker

  - name: Reload ip settings
    command: sysctl -p

  - name: Get KubeEdge and unarchive it
    unarchive:
      src: https://github.com/kubeedge/kubeedge/releases/download/v1.8.1/keadm-v1.8.1-linux-amd64.tar.gz
      dest: "/{{registered_user.home}}"
      remote_src: true

  - name: Make KubeEdge executable
    file:
      dest: "/{{registered_user.home}}/keadm-v1.8.1-linux-amd64/keadm/keadm"
      mode: +x

  - name: Move KubeEdge executable
    command: mv "/{{registered_user.home}}/keadm-v1.8.1-linux-amd64/keadm/keadm" /usr/local/bin

  - name: Remove unneeded KubeEdge files
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "/{{registered_user.home}}/keadm-v1.8.1-linux-amd64"
      - "/{{registered_user.home}}/keadm-v1.8.1-linux-amd64.tar.gz"

  - name: Wait for join command to be finished on cloud controller
    local_action:
      module: wait_for
      path: /{{registered_user.home}}/manifests/edgecore/join-command.txt
    become: false

  - name: Copy the join command to the edge node
    copy: 
      src: /{{registered_user.home}}/manifests/edgecore/join-command.txt 
      dest: /{{registered_user.home}}/manifests/edgecore/join-command.txt

  - name: Join the cloud controller kubernetes server
    shell: "nohup keadm join --cloudcore-ipport=192.168.56.2:10000 --token=$(cat /{{registered_user.home}}/manifests/edgecore//join-command.txt) --kubeedge-version=1.8.1"
    become: true 
  handlers:
    - name: docker status
      service: name=docker state=started