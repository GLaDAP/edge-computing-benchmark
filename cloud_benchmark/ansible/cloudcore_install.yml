---
- hosts: 127.0.0.1
  become: true
  tasks:
  - name: Add containerd configuration
    shell:
      cmd: |
        tee -a /etc/modules-load.d/containerd.conf <<'EOF'
        overlay
        br_netfilter
        EOF

  - modprobe:
      name: overlay
      state: present
  - modprobe:
      name: br_netfilter
      state: present

  - name: Enable ipv4 forwarding and bridging
    shell:
      cmd: |
        tee /etc/sysctl.d/99-kubernetes-cri.conf <<'EOF'
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF
    register: firewall

  - shell: sysctl -p --system
    when: firewall.changed

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - python3-apt 
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - containerd

  - name: Make sure a service containerd is running
    ansible.builtin.systemd:
      state: started
      name: containerd

  - name: Enable service containerd and ensure it is not masked
    ansible.builtin.systemd:
      name: containerd
      enabled: yes

  # Disable swap for K8s
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Reload ip settings
    command: sysctl -p

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - kubelet=1.21.0-00
        - kubeadm=1.21.0-00
        - kubectl=1.21.0-00

  - name: Hold kubelet
    dpkg_selections:
      name: kubelet
      selection: hold

  - name: Hold kubeadm
    dpkg_selections:
      name: kubeadm
      selection: hold

  - name: Hold kubectl
    dpkg_selections:
      name: kubectl
      selection: hold

#########################################33

  - shell: 'ip addr show ens4 | grep -o "inet [0-9]*\.[0-9]*\.[0-9]*\.[0-9]*" | grep -o "[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*"'
    register: cloud_ip

  # Initialize the kubernetes cluster.
  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --kubernetes-version=1.21.0 --apiserver-advertise-address={{ cloud_ip.stdout }} --apiserver-cert-extra-sans={{ cloud_ip.stdout }}

  - file:
      path: /etc/kubernetes/admin.conf
      mode: o+r

  - name: Ensures /root/.kube
    file: 
      path: "/root/.kube"
      state: directory

  - name: Copy kubeconfig to "/root/.kube/config"
    copy:
      src: /etc/kubernetes/admin.conf 
      dest: "/root/.kube/config"