{
  "version": 4,
  "terraform_version": "1.0.11",
  "serial": 152,
  "lineage": "51f482f0-8b6b-e85c-81d5-1471ca917ab6",
  "outputs": {
    "config_bucket_name": {
      "value": "edge-benchmark-config-bucket",
      "type": "string"
    },
    "config_bucket_url": {
      "value": "gs://edge-benchmark-config-bucket",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "google_compute_image",
      "name": "ubuntu",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "archive_size_bytes": 2355278976,
            "creation_timestamp": "2021-11-18T07:39:37.859-08:00",
            "description": "Canonical, Ubuntu, 18.04 LTS, amd64 bionic image built on 2021-11-15, supports Shielded VM features",
            "disk_size_gb": 10,
            "family": "ubuntu-1804-lts",
            "filter": null,
            "id": "projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20211115",
            "image_encryption_key_sha256": "",
            "image_id": "2979704101056269654",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": {},
            "licenses": [
              "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/licenses/ubuntu-1804-lts"
            ],
            "name": "ubuntu-1804-bionic-v20211115",
            "project": "ubuntu-os-cloud",
            "self_link": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20211115",
            "source_disk": "",
            "source_disk_encryption_key_sha256": "",
            "source_disk_id": "",
            "source_image_id": "",
            "status": "READY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "cloudcore_init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "4742a3c89fb8f94e6c90e02bc642f045e6ee4ae2e99e5b5e14ec83147e2eb218",
            "rendered": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\napt-get update\n\n# Waiting for kube config file to be available on GCS\nuntil gsutil -q stat gs://edge-benchmark-config-bucket/config\ndo\n    sleep 15\ndone\n\n# Download the kube config file\ngsutil cp gs://edge-benchmark-config-bucket/config /root/.kube/config\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Initialize kubeedge cloudcore\nPUBLIC_IP=$(curl --silent -H \"Metadata-Flavor: Google\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip)\n\nkeadm init --advertise-address=\"$PUBLIC_IP\"\n\nsleep 10\n\n# Upload the keadm join token to config bucket\nkeadm gettoken \u003e keadm_token\ngsutil cp keadm_token gs://edge-benchmark-config-bucket",
            "template": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\napt-get update\n\n# Waiting for kube config file to be available on GCS\nuntil gsutil -q stat ${config_bucket_url}/config\ndo\n    sleep 15\ndone\n\n# Download the kube config file\ngsutil cp ${config_bucket_url}/config /root/.kube/config\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Initialize kubeedge cloudcore\nPUBLIC_IP=$(curl --silent -H \"Metadata-Flavor: Google\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip)\n\nkeadm init --advertise-address=\"$PUBLIC_IP\"\n\nsleep 10\n\n# Upload the keadm join token to config bucket\nkeadm gettoken \u003e keadm_token\ngsutil cp keadm_token ${config_bucket_url}",
            "vars": {
              "config_bucket_url": "gs://edge-benchmark-config-bucket"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "controlplane_init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "24130e01e26a68904cc5354ea19072864a9f313768ed556378f4cbe1bc73dc3b",
            "rendered": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Letting iptables see bridged traffic\ncat \u003c\u003cEOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Installing kubeadm, kubelet and kubectl \napt-get update \u0026\u0026  apt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg |  apt-key add -\ncat \u003c\u003cEOF | tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\nPUBLIC_IP=$(curl -H \"Metadata-Flavor: Google\" \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\")\n\n# Initialize the Kubernetes control plane\nkubeadm init --token 5faip2.g5jmqw8qkixzuajg --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint $PUBLIC_IP\n\n# Copy the kube config to default location and GCS\nmkdir -p /root/.kube\ncp -i /etc/kubernetes/admin.conf /root/.kube/config\n\n# Installing Flannel pod network add-on\n#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\n# Upload the kube config to config bucket\ngsutil cp /root/.kube/config gs://edge-benchmark-config-bucket",
            "template": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Letting iptables see bridged traffic\ncat \u003c\u003cEOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Installing kubeadm, kubelet and kubectl \napt-get update \u0026\u0026  apt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg |  apt-key add -\ncat \u003c\u003cEOF | tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\nPUBLIC_IP=$(curl -H \"Metadata-Flavor: Google\" \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\")\n\n# Initialize the Kubernetes control plane\nkubeadm init --token ${kubeadm_token} --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint $PUBLIC_IP\n\n# Copy the kube config to default location and GCS\nmkdir -p /root/.kube\ncp -i /etc/kubernetes/admin.conf /root/.kube/config\n\n# Installing Flannel pod network add-on\n#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\n# Upload the kube config to config bucket\ngsutil cp /root/.kube/config ${config_bucket_url}",
            "vars": {
              "config_bucket_url": "gs://edge-benchmark-config-bucket",
              "kubeadm_token": "5faip2.g5jmqw8qkixzuajg"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "edgecore_init",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "eae150b5ef085e1fcf00944354438a25a362bd5ca9f798fa8af1f5f039b9066b",
            "rendered": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget  --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Waiting for keadm token file to be available on GCS\nuntil gsutil -q stat gs://edge-benchmark-config-bucket/keadm_token\ndo\n    sleep 15\ndone\n\n# Download the keadm token from the config bucket\ngsutil cp gs://edge-benchmark-config-bucket/keadm_token ./keadm_token\n\nKEADM_TOKEN=$(cat ./keadm_token)\n\nkeadm join --cloudcore-ipport=34.135.122.182:10000 --token=$KEADM_TOKEN",
            "template": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget  --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Waiting for keadm token file to be available on GCS\nuntil gsutil -q stat ${config_bucket_url}/keadm_token\ndo\n    sleep 15\ndone\n\n# Download the keadm token from the config bucket\ngsutil cp ${config_bucket_url}/keadm_token ./keadm_token\n\nKEADM_TOKEN=$(cat ./keadm_token)\n\nkeadm join --cloudcore-ipport=${cloudcore_ip}:10000 --token=$KEADM_TOKEN",
            "vars": {
              "cloudcore_ip": "34.135.122.182",
              "config_bucket_url": "gs://edge-benchmark-config-bucket"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "k8s_controlplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20211115",
                    "labels": {},
                    "size": 30,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/disks/k8s-controlplane"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/edge-benchmark/zones/us-central1-a/instances/k8s-controlplane",
            "instance_id": "861032223250394323",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-small",
            "metadata": {
              "ssh-keys": "akshay:ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFeqqfYX+bnW/AS3WYXznlRminMgMyFYuAd69fwwAyV2 dpuroja@gmail.com\n"
            },
            "metadata_fingerprint": "eGpvIsb8W-c=",
            "metadata_startup_script": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Letting iptables see bridged traffic\ncat \u003c\u003cEOF | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Installing kubeadm, kubelet and kubectl \napt-get update \u0026\u0026  apt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg |  apt-key add -\ncat \u003c\u003cEOF | tee /etc/apt/sources.list.d/kubernetes.list\ndeb https://apt.kubernetes.io/ kubernetes-xenial main\nEOF\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\nPUBLIC_IP=$(curl -H \"Metadata-Flavor: Google\" \"http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip\")\n\n# Initialize the Kubernetes control plane\nkubeadm init --token 5faip2.g5jmqw8qkixzuajg --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint $PUBLIC_IP\n\n# Copy the kube config to default location and GCS\nmkdir -p /root/.kube\ncp -i /etc/kubernetes/admin.conf /root/.kube/config\n\n# Installing Flannel pod network add-on\n#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml --kubeconfig=/etc/kubernetes/admin.conf\n\n# Upload the kube config to config bucket\ngsutil cp /root/.kube/config gs://edge-benchmark-config-bucket",
            "min_cpu_platform": "",
            "name": "k8s-controlplane",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.122.30.207",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/global/networks/test-network",
                "network_ip": "10.2.0.3",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/regions/us-central1/subnetworks/kubeedge-subnetwork-1",
                "subnetwork_project": "edge-benchmark"
              }
            ],
            "project": "edge-benchmark",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/instances/k8s-controlplane",
            "service_account": [
              {
                "email": "870520033135-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "data.google_compute_image.ubuntu",
            "data.template_file.controlplane_init",
            "google_compute_network.compute-network",
            "google_compute_subnetwork.compute-subnetwork",
            "google_storage_bucket.config_bucket",
            "random_string.token_part_1",
            "random_string.token_part_2"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "kubeedge_cloudcore",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20211115",
                    "labels": {},
                    "size": 30,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/disks/cloudcore"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/edge-benchmark/zones/us-central1-a/instances/cloudcore",
            "instance_id": "8787773312982920403",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-small",
            "metadata": {
              "ssh-keys": "akshay:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDrb10XpX4qmCaGDFXpD/IwINIqhtN6f/givLNcyJtxawYeY7AqrV6YwBbq1n12OTVNBDG5u0WoPT+aF3UUIKZ5WqBP4f1Jo78FMn7LclqOZ6p8D60hWjiHqhvbdjn05xN22+DJE128+E7mj8kCZ20bpKoCFBE6Dt9GT+BjODbNIAP31vJt7DrPPL29kLg92PyA14LsY1xXGxJbF6q/K93/d0QCgjs69PvckQiFlNig7xW8QVG40rpGH7qtHvAXvwmTupUiJUU/Ny33fGrfjdqxmx6dQzmhIZQHYRA0rio7AP5/OPbp58X1tYRBr6EIhWpJEPOOLkmll7UWzN+zJwZfwT18NKXr9gC2eRy92HtVjEacEwVV54p6j200tg5FbhKCvTjetSWLw2l8/APXLwziqDAMTkd62CU11QHMQv3adQbbpv/hLJ+oz6h3aH6r4w4lM4Xa7EuMG+6Czy4AZggvkjwkVHDqPVutz9aNpIdcaMcwznAIkmnAeQek6O/1sDs= gladap@Polaris-TuX\n"
            },
            "metadata_fingerprint": "wi3N2S_yxs4=",
            "metadata_startup_script": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\napt-get update\n\n# Waiting for kube config file to be available on GCS\nuntil gsutil -q stat gs://edge-benchmark-config-bucket/config\ndo\n    sleep 15\ndone\n\n# Download the kube config file\ngsutil cp gs://edge-benchmark-config-bucket/config /root/.kube/config\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Initialize kubeedge cloudcore\nPUBLIC_IP=$(curl --silent -H \"Metadata-Flavor: Google\" http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/access-configs/0/external-ip)\n\nkeadm init --advertise-address=\"$PUBLIC_IP\"\n\nsleep 10\n\n# Upload the keadm join token to config bucket\nkeadm gettoken \u003e keadm_token\ngsutil cp keadm_token gs://edge-benchmark-config-bucket",
            "min_cpu_platform": "",
            "name": "cloudcore",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.135.122.182",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/global/networks/test-network",
                "network_ip": "10.2.0.2",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/regions/us-central1/subnetworks/kubeedge-subnetwork-1",
                "subnetwork_project": "edge-benchmark"
              }
            ],
            "project": "edge-benchmark",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/instances/cloudcore",
            "service_account": [
              {
                "email": "870520033135-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "data.google_compute_image.ubuntu",
            "data.template_file.cloudcore_init",
            "google_compute_network.compute-network",
            "google_compute_subnetwork.compute-subnetwork",
            "google_storage_bucket.config_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "kubeedge_edgecore",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-1804-bionic-v20211115",
                    "labels": {},
                    "size": 30,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/disks/edgecore-0"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/edge-benchmark/zones/us-central1-a/instances/edgecore-0",
            "instance_id": "2751073323914964134",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-small",
            "metadata": {
              "ssh-keys": "akshay:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDrb10XpX4qmCaGDFXpD/IwINIqhtN6f/givLNcyJtxawYeY7AqrV6YwBbq1n12OTVNBDG5u0WoPT+aF3UUIKZ5WqBP4f1Jo78FMn7LclqOZ6p8D60hWjiHqhvbdjn05xN22+DJE128+E7mj8kCZ20bpKoCFBE6Dt9GT+BjODbNIAP31vJt7DrPPL29kLg92PyA14LsY1xXGxJbF6q/K93/d0QCgjs69PvckQiFlNig7xW8QVG40rpGH7qtHvAXvwmTupUiJUU/Ny33fGrfjdqxmx6dQzmhIZQHYRA0rio7AP5/OPbp58X1tYRBr6EIhWpJEPOOLkmll7UWzN+zJwZfwT18NKXr9gC2eRy92HtVjEacEwVV54p6j200tg5FbhKCvTjetSWLw2l8/APXLwziqDAMTkd62CU11QHMQv3adQbbpv/hLJ+oz6h3aH6r4w4lM4Xa7EuMG+6Czy4AZggvkjwkVHDqPVutz9aNpIdcaMcwznAIkmnAeQek6O/1sDs= gladap@Polaris-TuX\n"
            },
            "metadata_fingerprint": "Cevbnw5xZf0=",
            "metadata_startup_script": "#!/bin/bash\n\nset -x\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data ) 2\u003e\u00261\n\n# Installing Docker\napt-get update\n\napt-get install -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg-agent \\\n    software-properties-common\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\nadd-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\napt-get update \napt-get install -y docker-ce=5:19.03.14~3-0~ubuntu-bionic docker-ce-cli=5:19.03.14~3-0~ubuntu-bionic containerd.io\n\n# Download keadm\nKEADM_VERSION=keadm-v1.4.0-linux-amd64\nwget  --quiet https://github.com/kubeedge/kubeedge/releases/download/v1.4.0/$KEADM_VERSION.tar.gz\ntar -xvzf $KEADM_VERSION.tar.gz\nmv $KEADM_VERSION/keadm/keadm /usr/local/bin/\nrm -rf $KEADM_VERSION $KEADM_VERSION.tar.gz\n\n# Waiting for keadm token file to be available on GCS\nuntil gsutil -q stat gs://edge-benchmark-config-bucket/keadm_token\ndo\n    sleep 15\ndone\n\n# Download the keadm token from the config bucket\ngsutil cp gs://edge-benchmark-config-bucket/keadm_token ./keadm_token\n\nKEADM_TOKEN=$(cat ./keadm_token)\n\nkeadm join --cloudcore-ipport=34.135.122.182:10000 --token=$KEADM_TOKEN",
            "min_cpu_platform": "",
            "name": "edgecore-0",
            "network_interface": [
              {
                "access_config": [],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/global/networks/test-network",
                "network_ip": "10.2.0.4",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/regions/us-central1/subnetworks/kubeedge-subnetwork-1",
                "subnetwork_project": "edge-benchmark"
              }
            ],
            "project": "edge-benchmark",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/zones/us-central1-a/instances/edgecore-0",
            "service_account": [
              {
                "email": "870520033135-compute@developer.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "data.google_compute_image.ubuntu",
            "data.template_file.cloudcore_init",
            "data.template_file.edgecore_init",
            "google_compute_instance.kubeedge_cloudcore",
            "google_compute_network.compute-network",
            "google_compute_subnetwork.compute-subnetwork",
            "google_storage_bucket.config_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_network",
      "name": "compute-network",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/edge-benchmark/global/networks/test-network",
            "mtu": 0,
            "name": "test-network",
            "project": "edge-benchmark",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/global/networks/test-network",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "compute-subnetwork",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2021-12-05T02:19:18.296-08:00",
            "description": "",
            "external_ipv6_prefix": "",
            "fingerprint": null,
            "gateway_address": "10.2.0.1",
            "id": "projects/edge-benchmark/regions/us-central1/subnetworks/kubeedge-subnetwork-1",
            "ip_cidr_range": "10.2.0.0/16",
            "ipv6_access_type": "",
            "ipv6_cidr_range": "",
            "log_config": [],
            "name": "kubeedge-subnetwork-1",
            "network": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/global/networks/test-network",
            "private_ip_google_access": false,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "edge-benchmark",
            "purpose": "PRIVATE",
            "region": "us-central1",
            "role": "",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/edge-benchmark/regions/us-central1/subnetworks/kubeedge-subnetwork-1",
            "stack_type": "IPV4_ONLY",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAsImRlbGV0ZSI6MzYwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMH19",
          "dependencies": [
            "google_compute_network.compute-network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "config_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": true,
            "id": "edge-benchmark-config-bucket",
            "labels": null,
            "lifecycle_rule": [],
            "location": "US-CENTRAL1",
            "logging": [],
            "name": "edge-benchmark-config-bucket",
            "project": "edge-benchmark",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/edge-benchmark-config-bucket",
            "storage_class": "STANDARD",
            "uniform_bucket_level_access": false,
            "url": "gs://edge-benchmark-config-bucket",
            "versioning": [],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "download_kube_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8593933510442310594",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "google_storage_bucket.config_bucket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "token_part_1",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "5faip2",
            "keepers": null,
            "length": 6,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "5faip2",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_string",
      "name": "token_part_2",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "g5jmqw8qkixzuajg",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "g5jmqw8qkixzuajg",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ]
}
